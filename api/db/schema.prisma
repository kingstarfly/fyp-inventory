datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

// Define your own datamodels here and run `yarn redwood prisma migrate dev`
// to create migrations for them and apply to your dev DB.
model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  passwordHash String
  salt String
  resetToken String?
  resetTokenExpireAt DateTime?
  roles String @default("L1") // - L1 is unable to delete entries from database. - L2 is able to Create User. - L3 is able to Create User and Promote User to L2.

  firstName  String?
  lastName String?
  createdAt DateTime @default(now())

  loans Loan[]
}
model Item {
  id    Int     @id @default(autoincrement())
  name  String
  itemStatus String
  assetType String

  // Storage Location
  block String
  floor String
  room String
  subIndex String?

  remarks String?
  imageBlobBase64 String?
  loan Loan?
  loanHistory LoanHistory?
}

model Loan {
  id    Int     @id @default(autoincrement())
  loanedAt DateTime @default(now())
  expectedReturnAt DateTime
  returnedAt DateTime?
  remarks String?

  user User @relation(fields: [userId], references: [id])
  userId Int @unique

  loanHistory LoanHistory @relation(fields: [loanHistoryId], references: [id])
  loanHistoryId Int @unique

  item Item @relation(fields: [itemId], references: [id])
  itemId Int @unique
}

model LoanHistory {
  id   Int     @id @default(autoincrement())
  loans Loan[]

  item Item @relation(fields: [itemId], references: [id])
  itemId Int @unique
}

model Location {
  id   Int     @id @default(autoincrement())
  locationName String
  block String
  floor String
  room String
}